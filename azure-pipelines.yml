trigger:
  branches:
    include:
      - main
      - feature/ci-cd-pipeline

variables:
  - name: RUNTIME_ENV
    value: $(System.StageName)
  - group: databricks-credentials-latest

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Deploy
  jobs:
  - job: DeployToDatabricks
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
            # Create Databricks config file
            mkdir -p ~/.databricks
            cat > ~/.databrickscfg << EOF
            [DEFAULT]
            host = $(DATABRICKS_HOST_URL)
            client_id = $(DATABRICKS_CLIENT_ID)
            client_secret = $(DATABRICKS_CLIENT_SECRET)
            EOF
            
            # Debug: Check config file (with secrets redacted)
            echo "Checking databricks config:"
            sed -e 's/\(client_secret = \).*/\1[REDACTED]/' ~/.databrickscfg
            
            # Install Databricks CLI
            pip install databricks-cli --upgrade
            
            # Create a temporary directory for the folders we want to copy
            mkdir -p temp_deploy
            cp -r $(Build.SourcesDirectory)/DatabricksArtifacts temp_deploy/
            
            # Test Databricks connection
            echo "Testing Databricks connection:"
            databricks fs ls dbfs:/
            
            # Remove existing content if any
            echo "Removing existing content:"
            databricks fs rm -r dbfs:/repositories/$(Build.Repository.Name) || true
            
            # Copy the folders
            echo "Copying files to DBFS:"
            databricks fs cp -r temp_deploy/* dbfs:/repositories/$(Build.Repository.Name)
            
            # Verify the copy
            echo "Verifying copied files:"
            databricks fs ls dbfs:/repositories/$(Build.Repository.Name)
            
            # Clean up
            rm -rf temp_deploy
      env:
        DATABRICKS_HOST_URL: $(DATABRICKS_HOST_URL)
        DATABRICKS_CLIENT_ID: $(DATABRICKS_CLIENT_ID)
        DATABRICKS_CLIENT_SECRET: $(DATABRICKS_CLIENT_SECRET)