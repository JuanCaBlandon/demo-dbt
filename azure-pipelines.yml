trigger:
  branches:
    include:
      - main  # or your preferred branch
      - feature/ci-cd-pipeline

variables:
  - name: RUNTIME_ENV
    value: $(System.StageName) # or however you define your environment

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Deploy
  jobs:
  - job: DeployToDatabricks
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
            # Create Databricks config file
            mkdir -p ~/.databricks
            cat > ~/.databrickscfg << EOF
            [DEFAULT]
            host = "$(DATABRICKS_HOST_URL)"
            azure_tenant_id = "$(AZURE_TENANT_ID)"
            azure_client_id = "$(DATABRICKS_CLIENT_ID)"
            azure_client_secret = "$(DATABRICKS_CLIENT_SECRET)"
            EOF
            
            # Debug: Check config file
            echo "Checking databricks config:"
            cat ~/.databrickscfg
            
            # Install Databricks CLI
            pip install databricks-cli
            
            # Create a temporary directory for the folders we want to copy
            mkdir -p temp_deploy
            
            # Copy with correct case-sensitive folder names
            cp -r $(Build.SourcesDirectory)/DatabricksArtifacts temp_deploy/
            
            # Debug: List temp directory contents
            echo "Temp directory contents:"
            ls -la temp_deploy
            
            # Test Databricks connection
            echo "Testing Databricks connection:"
            databricks fs ls dbfs:/
            
            # Remove existing content if any
            echo "Removing existing content:"
            databricks fs rm -r dbfs:/repositories/$(Build.Repository.Name) || true
            
            # Copy the folders
            echo "Copying files to DBFS:"
            databricks fs cp -r temp_deploy/* dbfs:/repositories/$(Build.Repository.Name)
            
            # Verify the copy
            echo "Verifying copied files:"
            databricks fs ls dbfs:/repositories/$(Build.Repository.Name)
            
            # Clean up
            rm -rf temp_deploy
      env:
        DATABRICKS_HOST_URL: https://dbc-bea00b2d-f255.cloud.databricks.com/
        DATABRICKS_CLIENT_ID: b223769d-74d9-4cd1-895a-df8ee740fe30
        DATABRICKS_CLIENT_SECRET: dosec024ae355cb98f9858c86baed9695aa9
        AZURE_TENANT_ID: dbc-bea00b2d-f255